var searchIndex = JSON.parse('{\
"hyperlocal_with_windows":{"doc":"<code>hyperlocal-with-windows</code> provides Hyper bindings for Unix …","t":[3,8,3,8,3,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["SocketIncoming","UnixClientExt","UnixConnector","UnixServerExt","Uri","bind","bind_unix","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone_into","clone_into","default","fmt","fmt","fmt","from","from","from","from","from_listener","into","into","into","new","poll_accept","poll_ready","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unix","unix"],"q":["hyperlocal_with_windows","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A stream of connections from binding to a socket.","Extention trait for constructing a hyper HTTP client over …","the <code>[UnixConnector]</code> can be used to construct a …","Extension trait for provisioning a hyper HTTP server over …","A convenience type that can be used to construct Unix …","Creates a new <code>SocketIncoming</code> binding to provided socket …","Convenience method for constructing a Server listening on …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Creates a new <code>SocketIncoming</code> from Tokio’s <code>UnixListener</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>[Uri]</code> from a socket address and a path","","","","","","","","","","","","","","Construct a client which speaks HTTP over a Unix domain …","Construct a client which speaks HTTP over a Unix domain …"],"i":[0,0,0,0,0,3,21,7,3,9,7,3,9,7,7,9,7,9,7,7,3,9,7,3,3,9,3,7,3,9,9,3,7,7,9,7,3,9,7,3,9,7,3,9,22,22],"f":[0,0,0,0,0,[[[2,[1]]],[[5,[3,4]]]],[[[2,[1]]],[[5,[[6,[3]],4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[7,8]],[7,7],[9,9],[[]],[[]],[[],7],[[7,10],11],[[3,10],11],[[9,10],11],[[]],[12,3],[[]],[[]],[12,3],[[]],[[]],[[]],[[[2,[1]],13],9],[[[14,[3]],15],[[17,[[16,[5]]]]]],[[7,15],[[17,[5]]]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],18],[[],18],[[],18],[[],[[20,[7,19]]]],[[],[[20,[7,19]]]]],"p":[[3,"Path"],[8,"AsRef"],[3,"SocketIncoming"],[3,"Error"],[4,"Result"],[3,"Builder"],[3,"UnixConnector"],[3,"Uri"],[3,"Uri"],[3,"Formatter"],[6,"Result"],[3,"UnixListener"],[15,"str"],[3,"Pin"],[3,"Context"],[4,"Option"],[4,"Poll"],[3,"TypeId"],[3,"Body"],[3,"Client"],[8,"UnixServerExt"],[8,"UnixClientExt"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
